"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const V1User = __importStar(require("./v1/user"));
const V1Engines = __importStar(require("./v1/engines"));
const V1Generation = __importStar(require("./v1/generation"));
const V2Beta3DStableFast3D = __importStar(require("./v2beta/3d/stable-fast-3d"));
const V2BetaStableVideoImageToVideo = __importStar(require("./v2beta/stable-video/image-to-video"));
const V2BetaStableImageControl = __importStar(require("./v2beta/stable-image/control"));
const V2BetaStableImageEdit = __importStar(require("./v2beta/stable-image/edit"));
const V2BetaStableImageGenerate = __importStar(require("./v2beta/stable-image/generate"));
const V2BetaStableImageResults = __importStar(require("./v2beta/stable-image/results"));
const V2BetaStableImageUpscale = __importStar(require("./v2beta/stable-image/upscale"));
class StabilityAI {
    constructor(apiKey) {
        this.apiKey = apiKey;
    }
    get authHeaders() {
        return {
            Authorization: `Bearer ${this.apiKey}`,
        };
    }
    get orgAuthHeaders() {
        const headers = {};
        if (this.organiation)
            headers.Organization = this.organiation;
        if (this.clientId)
            headers['Stability-Client-ID'] = this.clientId;
        if (this.clientVersion)
            headers['Stability-Client-Version'] = this.clientVersion;
        return {
            ...this.authHeaders,
            ...headers,
        };
    }
    get v1() {
        return {
            user: {
                account: () => V1User.account.bind(this)(),
                balance: () => V1User.balance.bind(this)(),
            },
            engines: {
                list: () => V1Engines.list.bind(this)(),
            },
            generation: {
                textToImage: (...args) => V1Generation.textToImage.bind(this)(...args),
                imageToImage: (...args) => V1Generation.imageToImage.bind(this)(...args),
                imageToImageMasking: (...args) => V1Generation.imageToImageMasking.bind(this)(...args),
            },
        };
    }
    get v2beta() {
        return {
            stable3D: {
                stableFast3D: (...args) => V2Beta3DStableFast3D.stableFast3D.bind(this)(...args),
            },
            stableVideo: {
                imageToVideo: (...args) => V2BetaStableVideoImageToVideo.imageToVideo.bind(this)(...args),
                imageToVideoResult: (...args) => V2BetaStableVideoImageToVideo.imageToVideoResult.bind(this)(...args),
            },
            stableImage: {
                control: {
                    sketch: (...args) => V2BetaStableImageControl.sketch.bind(this)(...args),
                    structure: (...args) => V2BetaStableImageControl.structure.bind(this)(...args),
                    style: (...args) => V2BetaStableImageControl.style.bind(this)(...args),
                },
                edit: {
                    erase: (...args) => V2BetaStableImageEdit.erase.bind(this)(...args),
                    inpaint: (...args) => V2BetaStableImageEdit.inpaint.bind(this)(...args),
                    outpaint: (...args) => V2BetaStableImageEdit.outpaint.bind(this)(...args),
                    searchAndReplace: (...args) => V2BetaStableImageEdit.searchAndReplace.bind(this)(...args),
                    removeBackground: (...args) => V2BetaStableImageEdit.removeBackground.bind(this)(...args),
                    replaceBackgroundAndRelight: (...args) => V2BetaStableImageEdit.replaceBackgroundAndRelight.bind(this)(...args),
                },
                generate: {
                    ultra: (...args) => V2BetaStableImageGenerate.ultra.bind(this)(...args),
                    core: (...args) => V2BetaStableImageGenerate.core.bind(this)(...args),
                    sd3: (...args) => V2BetaStableImageGenerate.sd3.bind(this)(...args),
                },
                results: {
                    fetchAsyncGenerationResult: (...args) => V2BetaStableImageResults.fetchAsyncGenerationResult.bind(this)(...args),
                },
                upscale: {
                    conservative: (...args) => V2BetaStableImageUpscale.conservative.bind(this)(...args),
                    startCreative: (...args) => V2BetaStableImageUpscale.startCreative.bind(this)(...args),
                    fetchCreativeResult: (...args) => V2BetaStableImageUpscale.fetchCreativeResult.bind(this)(...args),
                },
            },
        };
    }
}
exports.default = StabilityAI;
//# sourceMappingURL=index.js.map