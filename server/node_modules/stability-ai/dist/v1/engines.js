"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.list = void 0;
const axios_1 = __importDefault(require("axios"));
const util_1 = require("../util");
const error_1 = require("../error");
const SAIUtil = __importStar(require("../util"));
const RESOURCE = 'engines';
var Endpoint;
(function (Endpoint) {
    Endpoint["LIST"] = "list";
})(Endpoint || (Endpoint = {}));
/**
 * Stability List Engines (v1/engines)
 */
async function list() {
    const response = await axios_1.default.get(SAIUtil.makeUrl(util_1.APIVersion.V1, RESOURCE, Endpoint.LIST), {
        headers: this.orgAuthHeaders,
    });
    if (response.status === 200 && Array.isArray(response.data)) {
        return response.data;
    }
    throw new error_1.StabilityAIError(response.status, 'Failed to get engines', response.data);
}
exports.list = list;
//# sourceMappingURL=engines.js.map